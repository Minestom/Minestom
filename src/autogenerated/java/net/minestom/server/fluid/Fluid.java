package net.minestom.server.fluid;

import java.util.Set;
import net.kyori.adventure.key.Key;
import net.kyori.adventure.key.Keyed;
import net.minestom.server.registry.ProtocolObject;
import net.minestom.server.registry.Registries;
import net.minestom.server.tags.GameTag;
import net.minestom.server.tags.GameTagHolder;
import net.minestom.server.tags.GameTags;
import net.minestom.server.tags.GameTagType;
import net.minestom.server.utils.NamespaceID;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * AUTOGENERATED by FluidGenerator
 */
public enum Fluid implements Keyed, ProtocolObject, GameTagHolder<Fluid> {
    EMPTY(NamespaceID.from("minecraft:empty")),

    FLOWING_WATER(NamespaceID.from("minecraft:flowing_water")),

    WATER(NamespaceID.from("minecraft:water")),

    FLOWING_LAVA(NamespaceID.from("minecraft:flowing_lava")),

    LAVA(NamespaceID.from("minecraft:lava"));

    private static final Fluid[] VALUES = values();

    private static final Set<GameTag<Fluid>> TAGS = GameTags.FLUIDS;

    @NotNull
    private final NamespaceID id;

    Fluid(@NotNull NamespaceID id) {
        this.id = id;
        Registries.fluids.put(id, this);
    }

    @Override
    @NotNull
    public Key key() {
        return this.id;
    }

    @Override
    @NotNull
    public NamespaceID namespace() {
        return this.id;
    }

    @Override
    public int id() {
        return ordinal();
    }

    @Override
    @NotNull
    public GameTagType<Fluid> tagType() {
        return GameTagType.FLUIDS;
    }

    @Override
    @NotNull
    public Set<GameTag<Fluid>> tags() {
        return TAGS;
    }

    public short getId() {
        return (short) ordinal();
    }

    @NotNull
    public NamespaceID getNamespaceID() {
        return this.id;
    }

    @NotNull
    @Override
    public String toString() {
        return "[" + this.id + "]";
    }

    @Nullable
    public static Fluid fromId(short id) {
        if(id >= 0 && id < VALUES.length) {
            return VALUES[id];
        }
        return null;
    }
}
