package net.minestom.server.registry;

import net.minestom.server.FeatureFlag;
import net.minestom.server.dialog.Dialog;
import net.minestom.server.entity.EntityType;
import net.minestom.server.entity.VillagerProfession;
import net.minestom.server.entity.attribute.Attribute;
import net.minestom.server.entity.damage.DamageType;
import net.minestom.server.entity.metadata.animal.ChickenVariant;
import net.minestom.server.entity.metadata.animal.CowVariant;
import net.minestom.server.entity.metadata.animal.FrogVariant;
import net.minestom.server.entity.metadata.animal.PigVariant;
import net.minestom.server.entity.metadata.animal.tameable.CatVariant;
import net.minestom.server.entity.metadata.animal.tameable.WolfSoundVariant;
import net.minestom.server.entity.metadata.animal.tameable.WolfVariant;
import net.minestom.server.entity.metadata.other.PaintingVariant;
import net.minestom.server.game.GameEvent;
import net.minestom.server.instance.block.Block;
import net.minestom.server.instance.block.BlockEntityType;
import net.minestom.server.instance.block.BlockSoundType;
import net.minestom.server.instance.block.banner.BannerPattern;
import net.minestom.server.instance.block.jukebox.JukeboxSong;
import net.minestom.server.instance.fluid.Fluid;
import net.minestom.server.item.Material;
import net.minestom.server.item.armor.TrimMaterial;
import net.minestom.server.item.armor.TrimPattern;
import net.minestom.server.item.enchant.Enchantment;
import net.minestom.server.item.instrument.Instrument;
import net.minestom.server.message.ChatType;
import net.minestom.server.particle.Particle;
import net.minestom.server.potion.PotionEffect;
import net.minestom.server.potion.PotionType;
import net.minestom.server.sound.SoundEvent;
import net.minestom.server.statistic.StatisticType;
import net.minestom.server.world.DimensionType;
import net.minestom.server.world.biome.Biome;
import org.jetbrains.annotations.ApiStatus;

/**
 * This class contains all the generated constants for {@link BuiltinRegistries}
 * <br>
 * Code autogenerated, do not edit!
 */
@ApiStatus.NonExtendable
@SuppressWarnings("all")
public interface BuiltinRegistries {
    /**
     * The static registry key for {@link Attribute}
     */
    RegistryKey<Registry<Attribute>> ATTRIBUTE = RegistryKey.unsafeOf("attribute");

    /**
     * The static registry key for {@link Block}
     */
    RegistryKey<Registry<Block>> BLOCK = RegistryKey.unsafeOf("block");

    /**
     * The static registry key for {@link BlockEntityType}
     */
    RegistryKey<Registry<BlockEntityType>> BLOCK_ENTITY_TYPES = RegistryKey.unsafeOf("block_entity_types");

    /**
     * The static registry key for {@link BlockSoundType}
     */
    RegistryKey<Registry<BlockSoundType>> BLOCK_SOUND_TYPE = RegistryKey.unsafeOf("block_sound_type");

    /**
     * The static registry key for {@link StatisticType}
     */
    RegistryKey<Registry<StatisticType>> CUSTOM_STATISTICS = RegistryKey.unsafeOf("custom_statistics");

    /**
     * The static registry key for {@link EntityType}
     */
    RegistryKey<Registry<EntityType>> ENTITY_TYPE = RegistryKey.unsafeOf("entity_type");

    /**
     * The static registry key for {@link FeatureFlag}
     */
    RegistryKey<Registry<FeatureFlag>> FEATURE_FLAG = RegistryKey.unsafeOf("feature_flag");

    /**
     * The static registry key for {@link Fluid}
     */
    RegistryKey<Registry<Fluid>> FLUID = RegistryKey.unsafeOf("fluid");

    /**
     * The static registry key for {@link GameEvent}
     */
    RegistryKey<Registry<GameEvent>> GAME_EVENT = RegistryKey.unsafeOf("game_event");

    /**
     * The static registry key for {@link Material}
     */
    RegistryKey<Registry<Material>> ITEM = RegistryKey.unsafeOf("item");

    /**
     * The static registry key for {@link Particle}
     */
    RegistryKey<Registry<Particle>> PARTICLE = RegistryKey.unsafeOf("particle");

    /**
     * The static registry key for {@link PotionEffect}
     */
    RegistryKey<Registry<PotionEffect>> POTION_EFFECT = RegistryKey.unsafeOf("potion_effect");

    /**
     * The static registry key for {@link PotionType}
     */
    RegistryKey<Registry<PotionType>> POTION_TYPE = RegistryKey.unsafeOf("potion_type");

    /**
     * The static registry key for {@link SoundEvent}
     */
    RegistryKey<Registry<SoundEvent>> SOUND_EVENT = RegistryKey.unsafeOf("sound_event");

    /**
     * The static registry key for {@link VillagerProfession}
     */
    RegistryKey<Registry<VillagerProfession>> VILLAGER_PROFESSION = RegistryKey.unsafeOf("villager_profession");

    /**
     * The dynamic registry key for {@link BannerPattern}
     */
    RegistryKey<DynamicRegistry<BannerPattern>> BANNER_PATTERN = RegistryKey.unsafeOf("banner_pattern");

    /**
     * The dynamic registry key for {@link CatVariant}
     */
    RegistryKey<DynamicRegistry<CatVariant>> CAT_VARIANT = RegistryKey.unsafeOf("cat_variant");

    /**
     * The dynamic registry key for {@link ChatType}
     */
    RegistryKey<DynamicRegistry<ChatType>> CHAT_TYPE = RegistryKey.unsafeOf("chat_type");

    /**
     * The dynamic registry key for {@link ChickenVariant}
     */
    RegistryKey<DynamicRegistry<ChickenVariant>> CHICKEN_VARIANT = RegistryKey.unsafeOf("chicken_variant");

    /**
     * The dynamic registry key for {@link CowVariant}
     */
    RegistryKey<DynamicRegistry<CowVariant>> COW_VARIANT = RegistryKey.unsafeOf("cow_variant");

    /**
     * The dynamic registry key for {@link DamageType}
     */
    RegistryKey<DynamicRegistry<DamageType>> DAMAGE_TYPE = RegistryKey.unsafeOf("damage_type");

    /**
     * The dynamic registry key for {@link Dialog}
     */
    RegistryKey<DynamicRegistry<Dialog>> DIALOG = RegistryKey.unsafeOf("dialog");

    /**
     * The dynamic registry key for {@link DimensionType}
     */
    RegistryKey<DynamicRegistry<DimensionType>> DIMENSION_TYPE = RegistryKey.unsafeOf("dimension_type");

    /**
     * The dynamic registry key for {@link Enchantment}
     */
    RegistryKey<DynamicRegistry<Enchantment>> ENCHANTMENT = RegistryKey.unsafeOf("enchantment");

    /**
     * The dynamic registry key for {@link FrogVariant}
     */
    RegistryKey<DynamicRegistry<FrogVariant>> FROG_VARIANT = RegistryKey.unsafeOf("frog_variant");

    /**
     * The dynamic registry key for {@link Instrument}
     */
    RegistryKey<DynamicRegistry<Instrument>> INSTRUMENT = RegistryKey.unsafeOf("instrument");

    /**
     * The dynamic registry key for {@link JukeboxSong}
     */
    RegistryKey<DynamicRegistry<JukeboxSong>> JUKEBOX_SONG = RegistryKey.unsafeOf("jukebox_song");

    /**
     * The dynamic registry key for {@link PaintingVariant}
     */
    RegistryKey<DynamicRegistry<PaintingVariant>> PAINTING_VARIANT = RegistryKey.unsafeOf("painting_variant");

    /**
     * The dynamic registry key for {@link PigVariant}
     */
    RegistryKey<DynamicRegistry<PigVariant>> PIG_VARIANT = RegistryKey.unsafeOf("pig_variant");

    /**
     * The dynamic registry key for {@link TrimMaterial}
     */
    RegistryKey<DynamicRegistry<TrimMaterial>> TRIM_MATERIAL = RegistryKey.unsafeOf("trim_material");

    /**
     * The dynamic registry key for {@link TrimPattern}
     */
    RegistryKey<DynamicRegistry<TrimPattern>> TRIM_PATTERN = RegistryKey.unsafeOf("trim_pattern");

    /**
     * The dynamic registry key for {@link WolfSoundVariant}
     */
    RegistryKey<DynamicRegistry<WolfSoundVariant>> WOLF_SOUND_VARIANT = RegistryKey.unsafeOf("wolf_sound_variant");

    /**
     * The dynamic registry key for {@link WolfVariant}
     */
    RegistryKey<DynamicRegistry<WolfVariant>> WOLF_VARIANT = RegistryKey.unsafeOf("wolf_variant");

    /**
     * The dynamic registry key for {@link Biome}
     */
    RegistryKey<DynamicRegistry<Biome>> WORLDGEN_BIOME = RegistryKey.unsafeOf("worldgen/biome");
}
