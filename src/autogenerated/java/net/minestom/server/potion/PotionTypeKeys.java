package net.minestom.server.potion;

import net.minestom.server.registry.RegistryKey;
import org.jetbrains.annotations.ApiStatus;

/**
 * This class contains all the generated constants for {@link PotionType}
 * <br>
 * Code autogenerated, do not edit!
 */
@SuppressWarnings("all")
@ApiStatus.NonExtendable
public interface PotionTypeKeys {
    RegistryKey<PotionType> WATER = RegistryKey.unsafeOf("water");

    RegistryKey<PotionType> MUNDANE = RegistryKey.unsafeOf("mundane");

    RegistryKey<PotionType> THICK = RegistryKey.unsafeOf("thick");

    RegistryKey<PotionType> AWKWARD = RegistryKey.unsafeOf("awkward");

    RegistryKey<PotionType> NIGHT_VISION = RegistryKey.unsafeOf("night_vision");

    RegistryKey<PotionType> LONG_NIGHT_VISION = RegistryKey.unsafeOf("long_night_vision");

    RegistryKey<PotionType> INVISIBILITY = RegistryKey.unsafeOf("invisibility");

    RegistryKey<PotionType> LONG_INVISIBILITY = RegistryKey.unsafeOf("long_invisibility");

    RegistryKey<PotionType> LEAPING = RegistryKey.unsafeOf("leaping");

    RegistryKey<PotionType> LONG_LEAPING = RegistryKey.unsafeOf("long_leaping");

    RegistryKey<PotionType> STRONG_LEAPING = RegistryKey.unsafeOf("strong_leaping");

    RegistryKey<PotionType> FIRE_RESISTANCE = RegistryKey.unsafeOf("fire_resistance");

    RegistryKey<PotionType> LONG_FIRE_RESISTANCE = RegistryKey.unsafeOf("long_fire_resistance");

    RegistryKey<PotionType> SWIFTNESS = RegistryKey.unsafeOf("swiftness");

    RegistryKey<PotionType> LONG_SWIFTNESS = RegistryKey.unsafeOf("long_swiftness");

    RegistryKey<PotionType> STRONG_SWIFTNESS = RegistryKey.unsafeOf("strong_swiftness");

    RegistryKey<PotionType> SLOWNESS = RegistryKey.unsafeOf("slowness");

    RegistryKey<PotionType> LONG_SLOWNESS = RegistryKey.unsafeOf("long_slowness");

    RegistryKey<PotionType> STRONG_SLOWNESS = RegistryKey.unsafeOf("strong_slowness");

    RegistryKey<PotionType> TURTLE_MASTER = RegistryKey.unsafeOf("turtle_master");

    RegistryKey<PotionType> LONG_TURTLE_MASTER = RegistryKey.unsafeOf("long_turtle_master");

    RegistryKey<PotionType> STRONG_TURTLE_MASTER = RegistryKey.unsafeOf("strong_turtle_master");

    RegistryKey<PotionType> WATER_BREATHING = RegistryKey.unsafeOf("water_breathing");

    RegistryKey<PotionType> LONG_WATER_BREATHING = RegistryKey.unsafeOf("long_water_breathing");

    RegistryKey<PotionType> HEALING = RegistryKey.unsafeOf("healing");

    RegistryKey<PotionType> STRONG_HEALING = RegistryKey.unsafeOf("strong_healing");

    RegistryKey<PotionType> HARMING = RegistryKey.unsafeOf("harming");

    RegistryKey<PotionType> STRONG_HARMING = RegistryKey.unsafeOf("strong_harming");

    RegistryKey<PotionType> POISON = RegistryKey.unsafeOf("poison");

    RegistryKey<PotionType> LONG_POISON = RegistryKey.unsafeOf("long_poison");

    RegistryKey<PotionType> STRONG_POISON = RegistryKey.unsafeOf("strong_poison");

    RegistryKey<PotionType> REGENERATION = RegistryKey.unsafeOf("regeneration");

    RegistryKey<PotionType> LONG_REGENERATION = RegistryKey.unsafeOf("long_regeneration");

    RegistryKey<PotionType> STRONG_REGENERATION = RegistryKey.unsafeOf("strong_regeneration");

    RegistryKey<PotionType> STRENGTH = RegistryKey.unsafeOf("strength");

    RegistryKey<PotionType> LONG_STRENGTH = RegistryKey.unsafeOf("long_strength");

    RegistryKey<PotionType> STRONG_STRENGTH = RegistryKey.unsafeOf("strong_strength");

    RegistryKey<PotionType> WEAKNESS = RegistryKey.unsafeOf("weakness");

    RegistryKey<PotionType> LONG_WEAKNESS = RegistryKey.unsafeOf("long_weakness");

    RegistryKey<PotionType> LUCK = RegistryKey.unsafeOf("luck");

    RegistryKey<PotionType> SLOW_FALLING = RegistryKey.unsafeOf("slow_falling");

    RegistryKey<PotionType> LONG_SLOW_FALLING = RegistryKey.unsafeOf("long_slow_falling");

    RegistryKey<PotionType> WIND_CHARGED = RegistryKey.unsafeOf("wind_charged");

    RegistryKey<PotionType> WEAVING = RegistryKey.unsafeOf("weaving");

    RegistryKey<PotionType> OOZING = RegistryKey.unsafeOf("oozing");

    RegistryKey<PotionType> INFESTED = RegistryKey.unsafeOf("infested");
}
